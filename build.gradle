// build.gradle 파일
// - gradle 빌드 도구가 사용하는 설정 파일이다.
// - gradle 빌드 도구가 실행할 명령을 이 파일에 작성한다.

// 1) gradle 빌드 도구가 사용할 플러그인 추가
// => 이클립스 관련 파일을 생성하고 제거하는 명령어가 들어 있는 플러그인
apply plugin : 'eclipse-wtp'

// => 자바 관련 작업을 수행할 명령어가 들어있는 플러그인
apply plugin : 'java'

// => web archive
apply plugin : 'war'

compileJava {
    // 컴파일 할 때 소스 파일을 인코딩 옵션을 추가할 것이다.
    options.encoding = 'UTF-8'
}

war {
    archiveName = "pms.war"
}

// 프로젝트에서 사용하는 의존 라이브러리를 외부의 디렉토리로 복사하는 명령 추가
task copyJars(type: Copy) {
    from configurations.runtime
    into "build/libs/deps"
}

// => 의존 라이브러리를 보관하고 있는 서버를 지정한다.
repositories {
    mavenCentral()
}

// => 다운로드할 의존 라이브러리를 지정한다.
dependencies {
    // MariaDB JDBC 라이브러리
    //compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.5'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.46'
    
    
    // Mybatis 라이브러리
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.6'
    
    // mybatis를 spring과 연동시키는 라이브러리
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.2'
    
    // Spring IoC 컨테이너 라이브러리
    compile group: 'org.springframework', name: 'spring-webmvc', version: '5.0.6.RELEASE'
    //compile group: 'org.springframework', name: 'spring-context', version: '5.0.6.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.0.6.RELEASE'
    
    // AOP
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.1'
    
    // DB 커넥션풀 라이브러리
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
    
    // JSP 확장 태그인 JSTL 라이브러리
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    
    
    // 스프링에서는 JSON 데이터를 처리할 때,
    // (즉 요청 파라미터로 JSON 데이터를 받아서 자바 객체로 변환하거나
    // 자바 객체를 클라이언트로 보낼때 JSON 문자열로 바꾸거나 할떄)
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'

    //
    //compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    
    
    // 서블릿 라이브러리
    // => 어느 버전의 서블릿 규칙에 따라 만든 서버에서 실행할 것인지에 따라
    //    그 버전의 라이브러리를 다운로드 받아야한다.
    // => 즉 서버와 같은 버전의 라이브러리를 다운로드 받아서 사용해야만 그 서버에서 실행할수 있다.
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
}